version: '3.8'

services:
  kafka-to-elastic:
    build: ./kafka-to-elastic
    depends_on:
      - kafka
      - elasticsearch-node1
      - elasticsearch-node2
    networks:
      - kafka-net
      - es-net
    entrypoint: [ "/bin/sh", "-c", "until nc -z kafka 9092; do echo waiting for kafka; sleep 2; done; npm start" ]
    platform: linux/amd64

  dlq-consumer:
    build: ./dlq-consumer
    depends_on:
      - kafka
      - elasticsearch-node1
      - elasticsearch-node2
    networks:
      - kafka-net
      - es-net
    entrypoint: [ "/bin/sh", "-c", "until nc -z kafka 9092; do echo waiting for kafka; sleep 2; done; npm start" ]
    platform: linux/amd64

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-net
    platform: linux/amd64

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
      - elasticsearch-node1
      - elasticsearch-node2
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    networks:
      - kafka-net
      - es-net
    healthcheck:
      test: [ "CMD", "kafka-topics", "--list", "--bootstrap-server", "localhost:9092" ]
      interval: 10s
      timeout: 5s
      retries: 5
    platform: linux/amd64

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.12
    container_name: logstash
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - ./logs:/usr/src/app/logs
    ports:
      - "5044:5044"
    depends_on:
      - kafka
    networks:
      - kafka-net
    platform: linux/amd64

  elasticsearch-node1:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.12
    container_name: elasticsearch-node1
    environment:
      - node.name=es-node-1
      - cluster.name=es-cluster
      - discovery.seed_hosts=elasticsearch-node1,elasticsearch-node2
      - cluster.initial_master_nodes=es-node-1,es-node-2
      - network.host=0.0.0.0
      - ELASTIC_PASSWORD=7*HG5aY5b0uLXJO=AIT8
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - xpack.security.enabled=true
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.keystore.path=/usr/share/elasticsearch/config/certs/elasticsearch-node1.p12
      - xpack.security.transport.ssl.truststore.path=/usr/share/elasticsearch/config/certs/elasticsearch-node1.p12
      - bootstrap.system_call_filter=false
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - esdata1:/usr/share/elasticsearch/data
      - ./certs/node1:/usr/share/elasticsearch/config/certs
      - ./certs/node1/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    networks:
      es-net:
        aliases:
          - elasticsearch
    platform: linux/amd64
    security_opt:
      - seccomp:unconfined

  elasticsearch-node2:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.12
    container_name: elasticsearch-node2
    environment:
      - node.name=es-node-2
      - cluster.name=es-cluster
      - discovery.seed_hosts=elasticsearch-node1,elasticsearch-node2
      - cluster.initial_master_nodes=es-node-1,es-node-2
      - network.host=0.0.0.0
      - ELASTIC_PASSWORD=7*HG5aY5b0uLXJO=AIT8
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - xpack.security.enabled=true
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.keystore.path=/usr/share/elasticsearch/config/certs/elasticsearch-node2.p12
      - xpack.security.transport.ssl.truststore.path=/usr/share/elasticsearch/config/certs/elasticsearch-node2.p12
      - bootstrap.system_call_filter=false
    ports:
      - 9201:9200
      - 9301:9300
    volumes:
      - esdata2:/usr/share/elasticsearch/data
      - ./certs/node2:/usr/share/elasticsearch/config/certs
      - ./certs/node2/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    networks:
      es-net:
        aliases:
          - elasticsearch
    platform: linux/amd64
    security_opt:
      - seccomp:unconfined

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.12
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=["https://elasticsearch-node1:9200","https://elasticsearch-node2:9200"]
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=7*HG5aY5b0uLXJO=AIT8
      - SERVER_SSL_ENABLED=false
      - ELASTICSEARCH_SSL_VERIFICATIONMODE=none
    ports:
      - 5601:5601
    networks:
      - es-net
    depends_on:
      - elasticsearch-node1
      - elasticsearch-node2
    platform: linux/amd64

volumes:
  esdata1:
    driver: local
  esdata2:
    driver: local

networks:
  es-net:
    driver: bridge
  kafka-net:
    driver: bridge
